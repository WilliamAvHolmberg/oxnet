.container-fluid
  .row
    .col-lg-4.col-md-6.col-sm-6
      .card.card-stats
        .card-header.card-header-warning.card-header-icon
          .card-icon
            i.fas.fa-group
          p.card-category Available slaves
          h3.card-title = @slaves.size
        .card-footer
          .stats
            p = "Sweet"
    .col-lg-4.col-md-6.col-sm-6
      .card.card-stats
        .card-header.card-header-success.card-header-icon
          .card-icon
            i.fas.fa-money-bill-alt
          p.card-category Mules
          h3.card-title = @mules.size
        .card-footer
          .stats
            i.material-icons date_range
            | Last 24 Hours
    / .col-lg-3.col-md-6.col-sm-6
    /   .card.card-stats
    /     .card-header.card-header-danger.card-header-icon
    /       .card-icon
    /         i.material-icons info_outline
    /       p.card-category Fixed Issues
    /       h3.card-title 75
    /     .card-footer
    /       .stats
    /         i.material-icons local_offer
    /         | Tracked from Github
    .col-lg-4.col-md-6.col-sm-6
      .card.card-stats
        .card-header.card-header-info.card-header-icon
          .card-icon
            i.fas.fa-gears
          p.card-category Accounts online
          h3.card-title = @active_accounts.size
        .card-footer
          .stats
            i.material-icons update
            | Just Updated
  .row
    .col-md-4
      .card.card-chart
        .card-header.card-header-success
          h4.card-title
            i.fas.fa-history
            = " Latest task logs"
        .card-body
          table.table.table-hover
            thead.text-warning
              th Seconds ago
              th Account
              th Task
              /! th Experience
              /! th Money
            tbody
              - @latest_task_logs.each do |log|
                tr
                  td = (Time.now.utc - log.created_at).round(3)
                  td = log.account.username
                  td = log.task.name if log.task != nil
                  /! td = log.xp_per_hour
                  /! td = log.money_per_hour

    .col-md-4
      .card.card-chart
        .card-header.card-header-primary
          h4.card-title
            i.fas.fa-laptop
            = " Computers connected:#{@connected_computers.size} "
        .card-body.table-responsive
          table.table.table-hover
            thead.text-warning
              th Computer Name
              th Accounts available
              th Accounts connected
              th Max limit
            tbody
              - @connected_computers.each do |comp|
                tr
                  td
                    a href=computer_path(comp)
                      = comp.name
                  td = @available_accounts.select { |acc| acc.computer_id == comp.id }.size
                  td
                    span.online.mr-2
                    = @active_accounts.select {|acc| acc.computer_id == comp.id }.size
                    / = " (#{comp.get_connected_accounts_count})"
                  td = comp.max_slaves
    .col-md-4
      .card.card-chart
        .card-header.card-header-danger
          h4.card-title
            i.fas.fa-money-bill-alt
            = " Mule Activity"
        .card-body.table-responsive
          table.table.table-hover
            thead.text-warning
              th Mule
              th Money deposited
              th Money withdrawn
            tbody

              - @mules.each do |mule|
                - @offlineMule = mule if mule.is_available
                tr
                  td
                    a href=account_path(mule)
                      - if @master_mule_ids[mule.id] != nil
                        i.fas.fa-crown.pr-1 style="color:orange"
                      = mule.username
                  td style="color:red" = ActiveSupport::NumberHelper.number_to_delimited(mule.get_money_deposited(@mule_logs))
                  td style="color:green" = ActiveSupport::NumberHelper.number_to_delimited(mule.get_money_withdrawn(@mule_logs))


  .row
    .col-lg-6.col-md-12
      .card
        .card-header.card-header-tabs.card-header-primary
          .nav-tabs-navigation
            .nav-tabs-wrapper
              span.nav-tabs-title Tasks:
              ul.nav.nav-tabs data-tabs="tabs"
                li.nav-item
                  a.nav-link.active href=accounts_path
                    i.material-icons account_circle
                    | Accounts
                    .ripple-container
                li.nav-item
                  a.nav-link href=hiscores_path
                    i.material-icons poll
                    | Hiscores
                    .ripple-container
                - if @offlineMule != nil
                  li.nav-item
                    a.nav-link href="/accounts/#{@offlineMule.id}?launch=true"
                      i.material-icons cloud
                      | Launch Mule
                      .ripple-container
        .card-body.table-responsive
          h3 = "Money making Overview"
          table.table.table-hover
            thead.text-warning
              th Area
              th Users
              th Money per Hour
              th Average
            tbody id="area_overview"
              = render partial:'nexus/area', collection: @areas, as: :area

        .card-body.table-responsive
          h3 = "Recently Banned"
          table.table.table-hover
            thead.text-warning
              th Time
              th Account Name
              th Time Alive
              th Highest Skill
              th Money Made
              th Created
              th Computer
              th IP
            tbody id="recent_bans"
              = render partial:'nexus/recentlybanned', collection: @recently_banned, as: :account

        .card-body.table-responsive
          h3 = "Recently Created"
          table.table.table-hover
            thead.text-warning
              th Time
              th Account Name
              th Proxy
              th Schema
            tbody
              = render partial:'nexus/recently_created', collection: @new_accounts, as: :account
        .card-body.table-responsive
          h3 = "Recently failed creations"
          table.table.table-hover
            thead.text-warning
              th Time
              th Account Name

              th IP
            tbody
              - @failed_accounts.each do |account|
                - stat = account.stats.sort_by {|s| s.level}.select {|s| s.skill.name != "Hitpoints"}.last
                tr
                  td
                    time class="timeago" datetime="#{account.created_at.localtime}" = "#{formatted_duration(Time.now.utc - account.created_at)} ago"
                  td
                    a href=account_path(account) = account.username

                  td
                    a href=proxy_path(account.proxy) = account.proxy.location


    .col-lg-6.col-md-12
      .card
        .card-header.card-header-primary
          - money_made_today = money_made_today()
          - money_last_2_hours = money_last_2_hours()
          - money_last_24_hours = money_last_24_hours()
          h4.card-title id="gpPrev24"
            = "GP Last 24H: "
            span = "#{number_with_delimiter(money_last_24_hours, :delimiter => ",", :separator => ".")}"
          h4.card-title id="gpToday"
            = "GP Today: "
            span = "#{number_with_delimiter(money_made_today, :delimiter => ",", :separator => ".")}"
          h4.card-title id="gpPerHr"
            = "Per Hour: "
            span = "#{number_with_delimiter((money_made_today / (Time.now.hour + 0.1)).round(0), :delimiter => ",", :separator => ".")}"
          h4.card-title id="gpRecAvg"
            = "Recent Avg: "
            span = "#{number_with_delimiter(money_last_2_hours / 2, :delimiter => ",", :separator => ".")}"
        .card-body.table-responsive
          table.table.table-hover
            thead.text-warning
              th Time
              th Account Name
              th Amount of Cash
              th Mule
            tbody id="mule_logs"
              = render partial:'nexus/mule_log', collection: @mule_logs, as: :log
footer.footer
  .container-fluid
    nav.pull-left
      ul
        li
          a href="#"
            | Oxnet + Nexus
javascript:
  $(document).ready(function () {
      var isIntervalInProgress = false;
      var lastChecked = new Date(0);
      var interval = 20000;
      setInterval(function() {
          var now = new Date();
          if(now - lastChecked < interval)
              return;
          if(now - lastChecked < 10 * 60 * 1000) {
              if (document.visibilityState != "visible")
                  return;
              if (!document.hasFocus())
                  return;
          }
          if(isIntervalInProgress) return;
          lastChecked = now;
          isIntervalInProgress = true;
          var most_recent = $("#mule_logs>tr>td>time").attr('datetime');
          $.get("/nexus/update_mule_logs?since=" + most_recent, function (data) {
              isIntervalInProgress = false;
              if(data.length > 0) {
                  $new_html = $("<tbody>" + data + "</tbody>");
                  $("#gpPrev24>span").html($new_html.find("#gpPrev24").val());
                  //var prevGPToday = parseInt($("#gpToday>span").text().replace(/[^\d\.\-]/g, ""));
                  // var additionalGPToday = parseInt($new_html.find("#gpToday").val().replace(/[^\d\.\-]/g, ""));
                  // $("#gpToday>span").html((prevGPToday + additionalGPToday).toString().replace(/\B(?=(\d{3})+(?!\d))/g, ","));
                  $("#gpToday>span").html($new_html.find("#gpToday").val());
                  $("#gpPerHr>span").html($new_html.find("#gpPerHr").val());
                  $("#gpRecAvg>span").html($new_html.find("#gpRecAvg").val());
                  $new_html = $new_html.find("#new_stats").remove().end().html();
                  $($new_html).prependTo($("#mule_logs")).hide(0).fadeIn(2000)
                  // $("#mule_logs").prepend($new_html);
                  page_load_stuff($("#mule_logs"));
              }
          });
      }, interval);
  });
