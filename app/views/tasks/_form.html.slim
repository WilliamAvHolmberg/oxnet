= form_for @task do |f|
  - if @task.errors.any?
    #error_explanation
      h2 = "#{pluralize(@task.errors.count, "error")} prohibited this task from being saved:"
      ul
        - @task.errors.full_messages.each do |message|
          li = message

  .field
    = f.label :name
    = f.text_field :name
    .field
      - if @task_types != nil && @task_types.length > 0
        = f.label :task_type
        = collection_select(:task, :task_type_id, @task_types, :id, :name, {:id => "task_type_selection"})
      - else
        = "Please create a task type before creating the task"
  #agility_task style="display: none"
    = render partial: 'agility_form', locals: {items: @items, f: f}
  #wc_task
    = render partial: 'woodcutting_form', locals:{items: @items, f: f}
  #combat_task style="display: none"
    = render partial: 'combat_form', locals: {items: @items, f: f}
  = render partial: 'area_form', locals:{items: @items, f: f}
  = render partial: 'break_form', locals:{items: @items, f: f}
  = render partial: 'inventory_form', locals:{items: @items, f: f}
  #quest_task style="display: none"
    = render partial: 'quest_form', locals: {items: @items, f: f}
  #mining_task style="display: none"
    = render partial: 'mining_form', locals: {items: @items, f: f}
  #schema
    .field
      - if @schemas != nil && @schemas.length > 0
        = f.label :schema
        = collection_select(:task, :schema_id, @schemas, :id, :name)
      - else
        = "Please create a area before creating the task"
  #requirements
    hr
    h3 = "Requirements"
    = f.fields_for :requirements do |req_form|
      hr
      = req_form.collection_select(:skill_id, Skill.all, :id, :name)
      .field
        = req_form.label :level
        = req_form.number_field :level
        = req_form.check_box '_destroy'
        label = "Don't create/Delete"

  .actions = f.submit
